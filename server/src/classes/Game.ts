import { IBoard, IGame, IPlayer, ITurn } from "battleship-types"
import Board from './Board'
import Player from './Player'

class Game implements IGame {
	// Creates a 10x10 board on initialization to use (could be UI generated by size choice)
	public playerBoard: IBoard = new Board()
	public opponentBoard: IBoard = new Board()
	public player: IPlayer
	public opponent: IPlayer
	public turns: ITurn[] = []
	public winner: IPlayer | null = null

	constructor() {
		// Setup player (could be UI generated)
		const player = new Player('Player', this.playerBoard)
		const opponent = new Player('Opponent', this.opponentBoard)
		this.player = player
		this.opponent = opponent
	}

	public play(): void {
		console.log("Let's play battleship.")
	}

	public addTurn(turn: ITurn): ITurn[] {
		// Increment turn id, 1-based
		const { playerName, guess, result } = turn
		let incremented = {
			id: this.turns.length++,
			playerName,
			guess,
			result
		}
		this.turns.push(incremented)
		return this.turns
	}

	public declareWinner(player: IPlayer): void {
		this.winner = player
	}
}

export default Game
